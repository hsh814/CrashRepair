FROM crepair:builder AS common
COPY --from=crepair:z3 /opt/z3/ /opt/z3/
COPY --from=crepair:llvm-6 /opt/llvm-6/ /opt/llvm-6/
COPY --from=crepair:llvm-11 /opt/llvm/ /opt/llvm11/
COPY --from=crepair:klee /klee/ /klee
COPY --from=crepair:klee /klee-uclibc /klee-uclibc
COPY --from=crepair:fuzzer /opt/fuzzer /opt/fuzzer

RUN add-apt-repository -y ppa:pypy/ppa
RUN apt-get update -qq \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --force-yes \
      bear \
      clang-10 \
      clang-tidy \
      file \
      gfortran \
      pypy3 \
      pypy3-dev \
      python3.8 \
      python3.8-dev
RUN python3.8 -m pip --disable-pip-version-check --no-cache-dir install \
      pip==22.3.1 \
      setuptools==65.6.3 \
 && python3.8 -m pip --disable-pip-version-check --no-cache-dir install \
      pylint==2.15.9 \
      cython==0.29.32 \
      pysmt==0.9.0 \
      funcy==1.17 \
      six==1.16.0 \
      numpy==1.19.1 \
      sympy==1.11.1 \
      wllvm==1.3.1 \
 && pysmt-install --z3 --confirm-agreement

ENV PYTHONPATH "/usr/lib/python3.8/site-packages:${PYTHONPATH}"

RUN pypy3 -m pip install --no-cache-dir \
      cython==0.29.32 \
      distlib==0.3.6 \
      setuptools==65.6.3 \
      pip==22.3.1 \
      funcy==1.17 \
      six==1.16.0 \
 && pypy3 -m pip install --no-cache-dir \
      wllvm==1.3.1 \
      sympy==1.11.1

ENV PATH "/opt/llvm-6/bin:/klee/build/bin:${PATH}"
ENV LLVM_COMPILER=clang

WORKDIR /CrashRepair

COPY lib ./lib
RUN cd /CrashRepair/lib \
 && KLEE_INCLUDE_PATH=/klee/source/include make

ENV PATH="/opt/crashrepair/bin:/CrashRepair/compiler:/klee/build/bin:${PATH}"
ENV CC=crepair-cc
ENV CXX=crepair-cxx
ENV LD_LIBRARY_PATH "/opt/crashrepair/lib:/CrashRepair/lib:/klee/build/lib:${LD_LIBRARY_PATH}"

COPY compiler ./compiler


# creates a minimal image that contains only the benchmark
FROM common AS benchmark
COPY experiments ./experiments
ARG BENCHMARK_WORKERS=8
RUN find ./experiments -name setup.sh | xargs -n 1 -P ${BENCHMARK_WORKERS} bash


# creates a minimal image that contains only the tool
FROM common AS tool
COPY app ./app
COPY bin ./bin
COPY tests ./tests
COPY Repair.py ./Repair.py

RUN ln -s /CrashRepair/bin/crepair /usr/bin/crepair

RUN crepair --help

COPY --from=crepair:sourcerepair /opt/crashrepair /opt/crashrepair
RUN rm /opt/crashrepair/lib/libz3.so
COPY --from=crepair:orchestrator /opt/crashrepair /opt/crashrepair


# creates an all-in-one image with the tool and benchmark
FROM benchmark AS aio
COPY --from=crepair:fuzzer /opt/fuzzer /opt/fuzzer
COPY --from=tool /CrashRepair/app /CrashRepair/app
COPY --from=tool /CrashRepair/bin /CrashRepair/bin
COPY --from=tool /CrashRepair/tests /CrashRepair/tests
COPY --from=tool /CrashRepair/lib /CrashRepair/lib
COPY --from=tool /CrashRepair/Repair.py /CrashRepair/Repair.py
COPY --from=crepair:sourcerepair /opt/crashrepair /opt/crashrepair
COPY --from=crepair:orchestrator /opt/crashrepair /opt/crashrepair
RUN ln -s /CrashRepair/bin/crepair /usr/bin/crepair
