#!/bin/bash
#
# This script runs CrashRepair on a single bug scenario from the dataset, specified by the name of
# the program the scenario belongs to (e.g., libtiff) and the scenario (e.g., bugzilla-2611), each
# given as separate arguments.
#
set -eu

MEMORY_LIMIT="${MEMORY_LIMIT:-16g}"
CPU_LIMIT="${CPU_LIMIT:-8}"

REPAIR_TIME_LIMIT="${REPAIR_TIME_LIMIT:-45}"
TEST_TIME_LIMIT="${TEST_TIME_LIMIT:-30}"

HERE_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR="${HERE_DIR}/.."

PROGRAM=$1
SCENARIO=$2

DOCKER_IMAGE=crepair:aio
DOCKER_CONTAINER_NAME="crepair_${PROGRAM}_${SCENARIO}"
docker run \
  --name ${DOCKER_CONTAINER_NAME} \
  -v "${ROOT_DIR}/results:/results" \
  -v "${ROOT_DIR}/logs:/logs" \
  -v "${HERE_DIR}/.runner.sh:/.runner.sh:ro" \
  -e HOST_UID=$(id -u) \
  -e HOST_GID=$(id -g) \
  -e REPAIR_TIME_LIMIT="${REPAIR_TIME_LIMIT}" \
  -e TEST_TIME_LIMIT="${TEST_TIME_LIMIT}" \
  --memory ${MEMORY_LIMIT} \
  --cpus ${CPU_LIMIT} \
  --rm \
  -t ${DOCKER_IMAGE} \
  bash /.runner.sh ${PROGRAM} ${SCENARIO}
