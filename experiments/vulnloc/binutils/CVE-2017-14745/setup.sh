#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/data//$benchmark_name/$project_name/$bug_id
current_dir=$PWD
mkdir -p $dir_name
cd $dir_name
mkdir dev-patch

project_url=https://sourceware.org/git/binutils-gdb.git
fix_commit_id=e6ff33ca50c1180725dde11c84ee93fcdb4235ef
bug_commit_id=7a31b38ef87d133d8204cae67a97f1989d25fa18

cd $dir_name
git clone $project_url src
cd src
git checkout $bug_commit_id
git format-patch -1 $fix_commit_id
cp *.patch $dir_name/dev-patch/fix.patch

CC=crepair-cc ./configure CFLAGS="-DFORTIFY_SOURCE=2 -fstack-protector-all -fno-omit-frame-pointer -ggdb -Wno-error" CXXFLAGS="-DFORTIFY_SOURCE=2 -fstack-protector-all -fno-omit-frame-pointer -ggdb -Wno-error"
make CC=crepair-cc CXX=crepair-cxx CFLAGS="-ldl  -Wno-error -g" CXXFLAGS="-ldl  -Wno-error -g" LDFLAGS="-ldl  -Wno-error -g" -j`nproc`

cat <<EOF > $script_dir/repair.conf
dir_exp:$dir_name
tag_id:$bug_id
src_directory:$dir_name/src
binary_path:$dir_name/src/binutils/objdump
config_command:skip
build_command:
test_input_list:-D \$POC
poc_list:$script_dir/../tests/1.bin
klee_flags:--link-llvm-lib=/CrashRepair/lib/libcrepair_proxy.bca
EOF
