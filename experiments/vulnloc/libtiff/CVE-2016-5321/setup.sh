#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/data/$benchmark_name/$project_name/$bug_id

current_dir=$PWD
mkdir -p $dir_name
cd $dir_name
mkdir dev-patch

project_url=https://github.com/vadz/libtiff.git
fix_commit_id=2f79856097f423eb33796a15fcf700d2ea41bf31
bug_commit_id=0ba5d88

cd $dir_name
git clone $project_url src
cd src
git checkout $bug_commit_id
cp -rf $script_dir/dev-patch $dir_name

./autogen.sh

cd $dir_name/src
sed -i 's/fabs/fabs_crepair/g' libtiff/tif_luv.c
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git add  libtiff/tif_luv.c
git commit -m 'replace fabs with proxy function'

sed -i '118d;221d' libtiff/tif_jpeg.c
sed -i '153d;2430d' libtiff/tif_ojpeg.c
git add libtiff/tif_ojpeg.c libtiff/tif_jpeg.c
git commit -m 'remove longjmp calls'

# see #62
find tools -name "*.c" | xargs -n1 sed -i 's@"tif_config.h"@"../libtiff/tif_config.h"@g'
find tools -name "*.c" | xargs -n1 sed -i 's@"tiffio.h"@"../libtiff/tiffio.h"@g'
find tools -name "*.h" | xargs -n1 sed -i 's@"tif_config.h"@"../libtiff/tif_config.h"@g'
find tools -sed -i 's@"tiffio.h"@"./tiffio.h"@g' libtiff/tiffio.h
sed -i 's@"tiffvers.h"@"./tiffvers.h"@g' libtiff/tiffio.h
sed -i 's@"tiffio.h"@"./tiffio.h"@g' libtiff/tiffiop.h
git add libtiff/*.h tools/*.c tools/*.h
git commit -m "resolve ambiguity in includes"

CC=crepair-cc ./configure CFLAGS="-g -O0" --enable-static --disable-shared
make CC=crepair-cc CXX=crepair-cxx CFLAGS="-g -O0 -static" CXXFLAGS="-g -O0 -static" LDFLAGS="-static" -j`nproc`


cat <<EOF > $script_dir/repair.conf
dir_exp:$dir_name
tag_id:$bug_id
src_directory:$dir_name/src
binary_path:$dir_name/src/tools/tiffcrop
config_command:skip
build_command:make CC=crepair-cc CXX=crepair-cxx CFLAGS="-g -O0 -static" CXXFLAGS="-g -O0 -static" LDFLAGS="-static"
test_input_list:\$POC foo.tif
poc_list:$script_dir/tests/1.tif
EOF


cat <<EOF > $dir_name/bug.json
{
  "project": {
    "name": "$project_name"
  },
  "name": "$bug_id",
  "binary": "$dir_name/src/tools/tiffcrop",
  "crash": {
    "command": "\$POC foo.tif",
    "input": "$script_dir/tests/1.tif",
    "extra-klee-flags": "",
    "expected-exit-code": 0
  },
  "source-directory": "src",
  "build": {
    "directory": "src",
    "binary": "$dir_name/src/tools/tiffcrop",
    "commands": {
      "prebuild": "./configure --enable-static --disable-shared",
      "clean": "make clean",
      "build": "make"
    }
  }
}
EOF
