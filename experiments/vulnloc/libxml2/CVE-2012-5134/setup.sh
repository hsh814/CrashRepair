#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/data//$benchmark_name/$project_name/$bug_id
current_dir=$PWD
mkdir -p $dir_name
cd $dir_name

project_url=https://gitlab.gnome.org/GNOME/libxml2.git
fix_commit_id=6a36fbe3b3e001a8a840b5c1fdd81cefc9947f0d
bug_commit_id=4ea74a44

cd $dir_name
git clone $project_url src
cd src
git checkout $bug_commit_id

cd $dir_name/src
./autogen.sh

cd $dir_name/src
sed -i 's/fabs/fabs_crepair/g' ./xmlschemastypes.c
sed -i 's/fabs/fabs_crepair/g' ./xpath.c
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git add  ./xmlschemastypes.c ./xpath.c
git commit -m 'replace fabs with proxy function'

# see #68
sed -i "s#NXT(0)#ctxt->input->cur[0]#g" ./parser.c
sed -i "s#NXT(1)#ctxt->input->cur[1]#g" ./parser.c
sed -i "s#NXT(2)#ctxt->input->cur[2]#g" ./parser.c
sed -i "s#NXT(3)#ctxt->input->cur[3]#g" ./parser.c
sed -i "s#NXT(4)#ctxt->input->cur[4]#g" ./parser.c
sed -i "s#NXT(5)#ctxt->input->cur[5]#g" ./parser.c
git add  ./parser.c
git commit -m "manually expanded NXT macro in parser.c"

cat <<EOF > $dir_name/bug.json
{
  "project": {
    "name": "$project_name"
  },
  "name": "$bug_id",
  "binary": "$dir_name/src/xmllint",
  "crash": {
    "command": "\$POC",
    "input": "$script_dir/tests/1.xml",
    "extra-klee-flags": "",
    "expected-exit-code": 0
  },
  "source-directory": "src",
  "build": {
    "directory": "src",
    "binary": "$dir_name/src/xmllint",
    "sanitizerflags": "-fsanitize=address",
    "commands": {
      "prebuild": "./configure --enable-static --disable-shared --without-threads --without-lzma",
      "clean": "make clean",
      "build": "make"
    }
  },
   "fuzzer": {
    "seed": 3,
    "crash-tag": "asan;0;src/parser.c:4079",
    "mutate-range": "default",
    "timeout": {
      "local": 300,
      "global": 300
    },
    "proof-of-crash": {
      "format": ["bfile"],
      "values": ["$script_dir/exploit"],
      "commands": {
        "crash": ["$dir_name/src/xmllint", "***"],
        "trace": ["$dir_name/src/xmllint", "***"]
      }
    }
  }
}
EOF
